apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: discourse
    name: discourse
  spec:
    ports:
    - name: "80"
      port: 80
      targetPort: 3000
    selector:
      io.kompose.service: discourse
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: postgresql
    name: postgresql
  spec:
    clusterIP: None
    ports:
    - name: headless
      port: 55555
      targetPort: 0
    selector:
      io.kompose.service: postgresql
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: redis
    name: redis
  spec:
    clusterIP: None
    ports:
    - name: headless
      port: 55555
      targetPort: 0
    selector:
      io.kompose.service: redis
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: sidekiq
    name: sidekiq
  spec:
    clusterIP: None
    ports:
    - name: headless
      port: 55555
      targetPort: 0
    selector:
      io.kompose.service: sidekiq
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    creationTimestamp: null
    name: discourse
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: discourse
      spec:
        containers:
        - image: bitnami/discourse:latest
          name: discourse
          ports:
          - containerPort: 3000
          resources: {}
          volumeMounts:
          - mountPath: /bitnami/discourse
            name: discourse-discourse-data
        restartPolicy: Always
        volumes:
        - name: discourse-discourse-data
          persistentVolumeClaim:
            claimName: discourse-discourse-data
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: discourse-discourse-data
    name: discourse-discourse-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    creationTimestamp: null
    name: postgresql
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: postgresql
      spec:
        containers:
        - image: bitnami/postgresql:latest
          name: postgresql
          resources: {}
          volumeMounts:
          - mountPath: /bitnami/postgresql
            name: discourse-postgresql-data
        restartPolicy: Always
        volumes:
        - name: discourse-postgresql-data
          persistentVolumeClaim:
            claimName: discourse-postgresql-data
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: discourse-postgresql-data
    name: discourse-postgresql-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    creationTimestamp: null
    name: redis
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: redis
      spec:
        containers:
        - image: bitnami/redis:latest
          name: redis
          resources: {}
          volumeMounts:
          - mountPath: /bitnami/redis
            name: discourse-redis-data
        restartPolicy: Always
        volumes:
        - name: discourse-redis-data
          persistentVolumeClaim:
            claimName: discourse-redis-data
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: discourse-redis-data
    name: discourse-redis-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    creationTimestamp: null
    name: sidekiq
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: sidekiq
      spec:
        containers:
        - args:
          - nami
          - start
          - --foreground
          - discourse-sidekiq
          image: bitnami/discourse:latest
          name: sidekiq
          resources: {}
          volumeMounts:
          - mountPath: /bitnami/discourse-sidekiq
            name: discourse-sidekiq-data
        restartPolicy: Always
        volumes:
        - name: discourse-sidekiq-data
          persistentVolumeClaim:
            claimName: discourse-sidekiq-data
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: discourse-sidekiq-data
    name: discourse-sidekiq-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
kind: List
metadata: {}

