apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.service.type: nodeport
    creationTimestamp: null
    labels:
      io.kompose.service: nginx
    name: nginx
  spec:
    ports:
    - name: "80"
      port: 80
      targetPort: 8080
    - name: "443"
      port: 443
      targetPort: 8443
    selector:
      io.kompose.service: nginx
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.service.type: nodeport
    creationTimestamp: null
    labels:
      io.kompose.service: nginx
    name: nginx
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: nginx
      spec:
        initContainers:
        - name: volume-permissions
          image: busybox
          command: ['sh', '-c', 'chmod -R g+rwX /bitnami']
          volumeMounts:
          - mountPath: /bitnami
            name: nginx-nginx-data
        containers:
        - image: bitnami/nginx:latest
          name: nginx
          env:
          - name: NAMI_LOG_LEVEL
            value: trace8
          ports:
          - containerPort: 8080
          - containerPort: 8443
          resources: {}
          volumeMounts:
          - mountPath: /bitnami
            name: nginx-nginx-data
        restartPolicy: Always
        volumes:
        - name: nginx-nginx-data
          persistentVolumeClaim:
            claimName: nginx-nginx-data
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: nginx-nginx-data
    name: nginx-nginx-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
kind: List
metadata: {}
