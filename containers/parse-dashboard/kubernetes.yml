apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: mongodb
    name: mongodb
  spec:
    clusterIP: None
    ports:
    - name: headless
      port: 55555
      targetPort: 0
    selector:
      io.kompose.service: mongodb
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: parse
    name: parse
  spec:
    ports:
    - name: "1337"
      port: 1337
      targetPort: 1337
    selector:
      io.kompose.service: parse
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: parse-dashboard
    name: parse-dashboard
  spec:
    ports:
    - name: "80"
      port: 80
      targetPort: 4040
    selector:
      io.kompose.service: parse-dashboard
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    creationTimestamp: null
    name: mongodb
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: mongodb
      spec:
        containers:
        - image: bitnami/mongodb:latest
          name: mongodb
          resources: {}
          volumeMounts:
          - mountPath: /bitnami/mongodb
            name: parsedashboard-mongodb-data
        restartPolicy: Always
        volumes:
        - name: parsedashboard-mongodb-data
          persistentVolumeClaim:
            claimName: parsedashboard-mongodb-data
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: parsedashboard-mongodb-data
    name: parsedashboard-mongodb-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    creationTimestamp: null
    name: parse
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: parse
      spec:
        containers:
        - image: bitnami/parse:latest
          name: parse
          ports:
          - containerPort: 1337
          resources: {}
          volumeMounts:
          - mountPath: /bitnami/parse
            name: parsedashboard-parse-data
        restartPolicy: Always
        volumes:
        - name: parsedashboard-parse-data
          persistentVolumeClaim:
            claimName: parsedashboard-parse-data
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: parsedashboard-parse-data
    name: parsedashboard-parse-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    creationTimestamp: null
    name: parse-dashboard
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: parse-dashboard
      spec:
        containers:
        - image: bitnami/parse-dashboard:latest
          name: parse-dashboard
          ports:
          - containerPort: 4040
          resources: {}
          volumeMounts:
          - mountPath: /bitnami/parse-dashboard
            name: parsedashboard-parse-dashboard-data
        restartPolicy: Always
        volumes:
        - name: parsedashboard-parse-dashboard-data
          persistentVolumeClaim:
            claimName: parsedashboard-parse-dashboard-data
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: parsedashboard-parse-dashboard-data
    name: parsedashboard-parse-dashboard-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
kind: List
metadata: {}

